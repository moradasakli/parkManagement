package gui;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;

import java.io.IOException;

import javax.swing.JOptionPane;

import EntityClasses.Message;
import EntityClasses.MessageType;
import EntityClasses.Order;
import client.ClientUI;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;
import javafx.scene.control.DatePicker;

import javafx.scene.control.ChoiceBox;
import javafx.scene.control.ComboBox;

public class PaymentController {

	@FXML
	private RadioButton payOnSite;
	@FXML
	private RadioButton payInAdvance;
	@FXML
	private Label chooseCardLbl;
	@FXML
	private Label ORLbl;
	@FXML
	private ComboBox previousCardsCB;
	@FXML
	private Label CardNameLbl;
	@FXML
	private Label CardNumberLbl;
	@FXML
	private Label Expirybl;
	@FXML
	private Label CVVLbl;
	@FXML
	private DatePicker ExpiryDatePicker;
	@FXML
	private TextField CardNametxtField;
	@FXML
	private TextField CardNumberTxtField;
	@FXML
	private TextField CVVTxtField;
	@FXML
	private Button CancelBtn;
	@FXML
	private Button ConfirmBtn;

	@FXML
	private Label OrderNumberLbl;
	@FXML
	private Label FullNameLbl;
	@FXML
	private Label ParkLbl;
	@FXML
	private Label DateLbl;
	@FXML
	private Label TimeLbl;
	@FXML
	private Label NumOfVisitorsLbl;
	@FXML
	private Label PriceLbl;
	@FXML
	private Label msgLbl;

	FXMLLoader loader = new FXMLLoader();

	Order order = new Order(ClientUI.chat.client.order);

	public static boolean isNewTourist = false;
	
	public static boolean cameFromPayment = false;
	public static boolean cameFromEdit = false;
	public static Order afterPayment;
	


	@FXML
	public void initialize() {
		
		if(EditReservationController.cameFromEdit)
		{
			PaymentController.cameFromEdit = true;
			EditReservationController.cameFromEdit = false;
		}
		

		if ((order != null)) {
			System.out.println("Printing Order Info - at Payment Page");
			OrderNumberLbl.setText("Order Number " + order.getOrderNumber());
			FullNameLbl.setText(order.getOrdererFirstName() + " " + order.getOrdererLastName());
			ParkLbl.setText(order.getParkNameInOrder());
			DateLbl.setText(order.getDateOfVisit().toString());
			TimeLbl.setText(order.getTimeOfVisit());
			NumOfVisitorsLbl.setText(order.getNumberOfVisitorsInOrder());
			PriceLbl.setText("" + order.getPrice());

		}
		
		if(!PaymentController.cameFromEdit)
			order.setPrice(order.calculateBill(false));
		
		CardNameLbl.setVisible(false);
		CardNumberLbl.setVisible(false);
		Expirybl.setVisible(false);
		CVVLbl.setVisible(false);
		CardNametxtField.setVisible(false);
		CardNumberTxtField.setVisible(false);
		ExpiryDatePicker.setVisible(false);
		CVVTxtField.setVisible(false);

		previousCardsCB.setVisible(false);
		chooseCardLbl.setVisible(false);
		ORLbl.setVisible(false);

		if (payInAdvance.isSelected()) {

			CardNameLbl.setVisible(true);
			CardNumberLbl.setVisible(true);
			Expirybl.setVisible(true);
			CVVLbl.setVisible(true);
			CardNametxtField.setVisible(true);
			CardNumberTxtField.setVisible(true);
			ExpiryDatePicker.setVisible(true);
			CVVTxtField.setVisible(true);

			if (!isNewTourist) {
				previousCardsCB.getItems().clear();
				previousCardsCB.getItems().addAll("**** **** **** 1234", "**** **** **** 5678");
				previousCardsCB.setVisible(true);
				chooseCardLbl.setVisible(true);
				ORLbl.setVisible(true);
			}

		}

	}

	@FXML
	public void OnSitePayment(ActionEvent event) {
		initialize();
	}

	@FXML
	public void AdvancedPayment(ActionEvent event) {
		if(!PaymentController.cameFromEdit)
		{
			order.setPrice(order.calculateBill(true));
			System.out.println("ENTERING PRICE UPDATE");
		}
			
		initialize();
	}

	// Event Listener on DatePicker[#ExpiryDatePicker].onAction
	@FXML
	public void ExpiryDatePickerFunc(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on ChoiceBox[#PayOnSiteCBox].onDragDetected
	@FXML
	public void PayOnSiteCBoxFunc(MouseEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#CancelBtn].onAction
	@FXML
	public void ReturnToRelaventPage(ActionEvent event) throws IOException {
		if (isNewTourist) {
			isNewTourist = false;
			JOptionPane.showMessageDialog(null,
					"order is booked but no payment was made , you can pay at entrance.\n"
							+ " from now on you can view your orders and options by logging in.\n"
							+ "press OK to return to home page",
					"Info", JOptionPane.INFORMATION_MESSAGE);
			Stage primaryStage;
			((Node) event.getSource()).getScene().getWindow().hide();
			primaryStage = new Stage();
			Pane root = (Pane) loader.load(this.getClass().getResource("/gui/HomePage.fxml").openStream());
			HomePageController clientConnectController = (HomePageController) loader.getController();
			Scene scene = new Scene(root);
			primaryStage.setTitle("HomePage");
			primaryStage.setScene(scene);
			primaryStage.show();
		} else {
			JOptionPane.showMessageDialog(null, "order is booked but no payment was made , you can pay at entrance.\n"
					+ "press OK to return to your home page", "Info", JOptionPane.INFORMATION_MESSAGE);
			Stage primaryStage;
			((Node) event.getSource()).getScene().getWindow().hide();
			primaryStage = new Stage();
			Pane root = (Pane) loader
					.load(this.getClass().getResource("/gui/ExistingTouristHomePage.fxml").openStream());
			ExistingTouristHomePageController ExistingTouristHomePageConnectController = (ExistingTouristHomePageController) loader
					.getController();
			Scene scene = new Scene(root);
			primaryStage.setTitle("ExistingTouristHomePage");
			primaryStage.setScene(scene);
			primaryStage.show();
		}
	}

	// Event Listener on Button[#ConfirmBtn].onAction
	@FXML
	public void ConfirmFunc(ActionEvent event) throws IOException {
		if (!payOnSite.isSelected() && !payInAdvance.isSelected())
			msgLbl.setText("Please choose a payment option");
		else {
			if (payInAdvance.isSelected()) {
				boolean result = validateCreditCardInfo();
				if (result) {
					order.setPayed(true);
					order.setPrice(order.calculateBill(true));
				} else {
					msgLbl.setText("credit card info are wrong , please re check");
				}
			}

			// update order info in db
			Message messageToServer = new Message(MessageType.TouristUpdateOrderAfterPayment, order);
			ClientUI.chat.accept(messageToServer);
			
			afterPayment = new Order(ClientUI.chat.client.order);
			cameFromPayment = true;

			if (payInAdvance.isSelected()) {
				if (isNewTourist) {
					isNewTourist = false;
					JOptionPane.showMessageDialog(null,
							"Payment Confirmed , Thank you and see you soon.\n"
									+ " from now on you can view your orders and options by logging in.\n"
									+ "press OK to return to home page",
							"Info", JOptionPane.INFORMATION_MESSAGE);
										
					Stage primaryStage;
					((Node) event.getSource()).getScene().getWindow().hide();
					primaryStage = new Stage();
					Pane root = (Pane) loader.load(this.getClass().getResource("/gui/HomePage.fxml").openStream());
					HomePageController clientConnectController = (HomePageController) loader.getController();
					Scene scene = new Scene(root);
					primaryStage.setTitle("HomePage");
					primaryStage.setScene(scene);
					primaryStage.show();
				} else {
					JOptionPane.showMessageDialog(null, "Payment Confirmed , Thank you and see you soon.\n"
							+ "press OK to return to your home page", "Info", JOptionPane.INFORMATION_MESSAGE);
					
					
					Stage primaryStage;
					((Node) event.getSource()).getScene().getWindow().hide();
					primaryStage = new Stage();
					Pane root = (Pane) loader
							.load(this.getClass().getResource("/gui/ExistingTouristHomePage.fxml").openStream());
					ExistingTouristHomePageController ExistingTouristHomePageConnectController = (ExistingTouristHomePageController) loader
							.getController();
					Scene scene = new Scene(root);
					primaryStage.setTitle("ExistingTouristHomePage");
					primaryStage.setScene(scene);
					primaryStage.show();
				}
			} else {
				// ReturnToRelaventPage(new ActionEvent());

				if (isNewTourist) {
					isNewTourist = false;
					JOptionPane.showMessageDialog(null,
							"order is booked but no payment was made , you can pay at entrance.\n"
									+ " from now on you can view your orders and options by logging in.\n"
									+ "press OK to return to home page",
							"Info", JOptionPane.INFORMATION_MESSAGE);
					Stage primaryStage;
					((Node) event.getSource()).getScene().getWindow().hide();
					primaryStage = new Stage();
					Pane root = (Pane) loader.load(this.getClass().getResource("/gui/HomePage.fxml").openStream());
					HomePageController clientConnectController = (HomePageController) loader.getController();
					Scene scene = new Scene(root);
					primaryStage.setTitle("HomePage");
					primaryStage.setScene(scene);
					primaryStage.show();
				} else {
					JOptionPane
							.showMessageDialog(null,
									"order is booked but no payment was made , you can pay at entrance.\n"
											+ "press OK to return to your home page",
									"Info", JOptionPane.INFORMATION_MESSAGE);
					Stage primaryStage;
					((Node) event.getSource()).getScene().getWindow().hide();
					primaryStage = new Stage();
					Pane root = (Pane) loader
							.load(this.getClass().getResource("/gui/ExistingTouristHomePage.fxml").openStream());
					ExistingTouristHomePageController ExistingTouristHomePageConnectController = (ExistingTouristHomePageController) loader
							.getController();
					Scene scene = new Scene(root);
					primaryStage.setTitle("ExistingTouristHomePage");
					primaryStage.setScene(scene);
					primaryStage.show();
				}

			}
		}

	}// end confirm

	public boolean validateCreditCardInfo() {
		return true;
	}

}

//last update : 25/3 , 19:03
